{
  "swagger": "2.0",
  "basePath": "/",
  "paths": {
    "/health": {
      "get": {
        "responses": {
          "200": {
            "description": "Success"
          }
        },
        "operationId": "get_healthcheck",
        "tags": [
          "Monitoring"
        ]
      }
    },
    "/api/locations": {
      "get": {
        "responses": {
          "200": {
            "description": "Success"
          }
        },
        "operationId": "get_locations_resource",
        "tags": [
          "UdaConnect"
        ]
      }
    },
    "/api/locations/{location_id}": {
      "parameters": [
        {
          "in": "path",
          "description": "Unique ID for a given Location",
          "name": "location_id",
          "required": true,
          "type": "string"
        }
      ],
      "get": {
        "responses": {
          "200": {
            "description": "Success"
          }
        },
        "operationId": "get_location_resource",
        "tags": [
          "UdaConnect"
        ]
      }
    },
    "/api/persons": {
      "post": {
        "responses": {
          "200": {
            "description": "Success"
          }
        },
        "operationId": "post_persons_resource",
        "summary": "Create a Person",
        "consumes": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "person",
            "description": "The person to create",
            "schema": {
              "$ref": "#/definitions/Person"
            }
          }
        ],
        "tags": [
          "UdaConnect"
        ]
      },
      "get": {
        "responses": {
          "200": {
            "description": "Success"
          }
        },
        "operationId": "get_persons_resource",
        "tags": [
          "UdaConnect"
        ]
      }
    },
    "/api/persons/{person_id}": {
      "parameters": [
        {
          "in": "path",
          "description": "Unique ID for a given Person",
          "name": "person_id",
          "required": true,
          "type": "string"
        }
      ],
      "get": {
        "responses": {
          "200": {
            "description": "Success"
          }
        },
        "operationId": "get_person_resource",
        "tags": [
          "UdaConnect"
        ]
      }
    },
    "/api/persons/{person_id}/connection": {
      "parameters": [
        {
          "in": "query",
          "description": "Proximity to a given user in meters",
          "name": "distance",
          "type": "string"
        },
        {
          "in": "query",
          "description": "Upper bound of date range",
          "name": "end_date",
          "type": "string"
        },
        {
          "in": "query",
          "description": "Lower bound of date range",
          "name": "start_date",
          "type": "string"
        },
        {
          "name": "person_id",
          "in": "path",
          "required": true,
          "type": "string"
        }
      ],
      "get": {
        "responses": {
          "200": {
            "description": "Success"
          }
        },
        "operationId": "get_connection_data_resource",
        "tags": [
          "UdaConnect"
        ]
      }
    }
  },
  "info": {
    "title": "UdaConnect API",
    "version": "0.1.0"
  },
  "produces": [
    "application/json"
  ],
  "consumes": [
    "application/json"
  ],
  "tags": [
    {
      "name": "UdaConnect",
      "description": "Connections via geolocation."
    }
  ],
  "responses": {
    "ParseError": {
      "description": "When a mask can't be parsed"
    },
    "MaskError": {
      "description": "When any error occurs on mask"
    }
  },
  "definitions": {
    "Person": {
      "type": "object",
      "required": [
        "first_name",
        "last_name",
        "company_name",
        "id"
      ],
      "properties": {
        "first_name": {
          "type": "string"
        },
        "last_name": {
          "type": "string"
        },
        "company_name": {
          "type": "string"
        },
        "id": {
          "type": "integer"
        }
      }
    }
  }
}